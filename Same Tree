/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> v;
    vector<int> inorderTraversal(TreeNode* root) {
        
    
        if(root == nullptr) 
        {
         v.push_back(0);
         return v;
        }
    inorderTraversal(root->left);
    
    inorderTraversal(root->right);
    v.push_back(root->val);
    return v;
    }
    bool isSameTree(TreeNode* p, TreeNode* q) {
        vector<int> v1 = inorderTraversal(p);
        v.clear();
        vector<int> v2 = inorderTraversal(q);
        if(v1 == v2)
        return true;
        else
        return false;
    }
};
