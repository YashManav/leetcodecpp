/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
       ListNode* tmp1 = head;
       ListNode* tmp2;
       if(head)
        tmp2 = head->next;
       else
       return head;
       while(tmp1 != NULL and tmp2 !=NULL){
           if(tmp1->val == tmp2->val)
           {
               ListNode* fr = tmp2;
               tmp2 = tmp2->next;
               if(tmp2 == NULL){
                   tmp1->next = tmp2;
               }
               }
           else{
               tmp1->next = tmp2;
               tmp1 = tmp2;
               tmp2 = tmp2->next;
           }
       }
       return head;
    }
};
